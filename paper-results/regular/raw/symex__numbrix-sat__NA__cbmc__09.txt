LOG:Benchmark directory: /home/ubuntu/formulog-compiler-eval/benchmarks/symex/bms/numbrix-sat
LOG:Timeout: 1800
LOG:Eval repo commit: 8bbdb9a
LOG:Formulog commit: 4bb3cbb
LOG:Z3 version: Z3 version 4.12.2 - 64 bit - build hashcode f7c9c9ef72fde0e00ef9409e6c24456effb8b930
LOG:Java version start
openjdk version "17.0.7" 2023-04-18
OpenJDK Runtime Environment (build 17.0.7+7-Ubuntu-0ubuntu122.04.2)
OpenJDK 64-Bit Server VM (build 17.0.7+7-Ubuntu-0ubuntu122.04.2, mixed mode, sharing)

LOG:Java version end
LOG:Mode: cbmc
LOG:Solver mode: NA
LOG:Parallelism: 40
LOG:CBMC info start
5.85.0 (cbmc-5.85.0)
LOG:CBMC info end
LOG:Execute command: timeout 1800 /usr/bin/time -f LOG:EXECUTE;ELAPSED=%es;USER=%Us;SYSTEM=%Ss;CPU=%P;MEM=%Mkb cbmc /home/ubuntu/formulog-compiler-eval/benchmarks/symex/bms/numbrix-sat/bench.c -DSYMEXEC -DCBMC --z3 --bounds-check --pointer-check --unwind 10
**** WARNING: Use --unwinding-assertions to obtain sound verification results
CBMC version 5.85.0 (cbmc-5.85.0) 64-bit x86_64 linux
Parsing /home/ubuntu/formulog-compiler-eval/benchmarks/symex/bms/numbrix-sat/bench.c
Converting
Type-checking bench
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
Generic Property Instrumentation
Running with 8 object bits, 56 offset bits (default)
Starting Bounded Model Checking
**** WARNING: no body for function symexec_new_int
Unwinding loop main.0 iteration 1 file /home/ubuntu/formulog-compiler-eval/benchmarks/symex/bms/numbrix-sat/bench.c line 33 function main thread 0
Unwinding loop main.0 iteration 2 file /home/ubuntu/formulog-compiler-eval/benchmarks/symex/bms/numbrix-sat/bench.c line 33 function main thread 0
Unwinding loop main.0 iteration 3 file /home/ubuntu/formulog-compiler-eval/benchmarks/symex/bms/numbrix-sat/bench.c line 33 function main thread 0
Unwinding loop main.0 iteration 4 file /home/ubuntu/formulog-compiler-eval/benchmarks/symex/bms/numbrix-sat/bench.c line 33 function main thread 0
Unwinding loop main.0 iteration 5 file /home/ubuntu/formulog-compiler-eval/benchmarks/symex/bms/numbrix-sat/bench.c line 33 function main thread 0
Unwinding loop main.0 iteration 6 file /home/ubuntu/formulog-compiler-eval/benchmarks/symex/bms/numbrix-sat/bench.c line 33 function main thread 0
Unwinding loop main.0 iteration 7 file /home/ubuntu/formulog-compiler-eval/benchmarks/symex/bms/numbrix-sat/bench.c line 33 function main thread 0
Unwinding loop main.0 iteration 8 file /home/ubuntu/formulog-compiler-eval/benchmarks/symex/bms/numbrix-sat/bench.c line 33 function main thread 0
Unwinding loop main.0 iteration 9 file /home/ubuntu/formulog-compiler-eval/benchmarks/symex/bms/numbrix-sat/bench.c line 33 function main thread 0
Not unwinding loop main.0 iteration 10 file /home/ubuntu/formulog-compiler-eval/benchmarks/symex/bms/numbrix-sat/bench.c line 33 function main thread 0
Runtime Symex: 0.00342925s
size of program expression: 121 steps
simple slicing removed 0 assignments
Generated 40 VCC(s), 0 remaining after simplification
Runtime Postprocess Equation: 8.12e-06s

** Results:
/home/ubuntu/formulog-compiler-eval/benchmarks/symex/bms/numbrix-sat/bench.c function main
[main.array_bounds.1] line 35 array 'grid' lower bound in grid[(signed long int)i]: SUCCESS
[main.array_bounds.2] line 35 array 'grid' upper bound in grid[(signed long int)i]: SUCCESS
[main.array_bounds.3] line 37 array 'cnt' lower bound in cnt[(signed long int)i]: SUCCESS
[main.array_bounds.4] line 37 array 'cnt' upper bound in cnt[(signed long int)i]: SUCCESS
[main.array_bounds.5] line 42 array 'grid' lower bound in grid[(signed long int)(4 * i + j)]: SUCCESS
[main.array_bounds.6] line 42 array 'grid' upper bound in grid[(signed long int)(4 * i + j)]: SUCCESS
[main.array_bounds.7] line 46 array 'grid' lower bound in grid[(signed long int)(4 * (i - 1) + j)]: SUCCESS
[main.array_bounds.8] line 46 array 'grid' upper bound in grid[(signed long int)(4 * (i - 1) + j)]: SUCCESS
[main.array_bounds.9] line 49 array 'grid' lower bound in grid[(signed long int)(4 * (i + 1) + j)]: SUCCESS
[main.array_bounds.10] line 49 array 'grid' upper bound in grid[(signed long int)(4 * (i + 1) + j)]: SUCCESS
[main.array_bounds.11] line 52 array 'grid' lower bound in grid[(signed long int)(4 * i + (j - 1))]: SUCCESS
[main.array_bounds.12] line 52 array 'grid' upper bound in grid[(signed long int)(4 * i + (j - 1))]: SUCCESS
[main.array_bounds.13] line 55 array 'grid' lower bound in grid[(signed long int)(4 * i + j + 1)]: SUCCESS
[main.array_bounds.14] line 55 array 'grid' upper bound in grid[(signed long int)(4 * i + j + 1)]: SUCCESS
[main.array_bounds.15] line 59 array 'cnt' lower bound in cnt[(signed long int)(val - 1)]: SUCCESS
[main.array_bounds.16] line 59 array 'cnt' upper bound in cnt[(signed long int)(val - 1)]: SUCCESS
[main.assertion.1] line 64 assertion 0: SUCCESS

** 0 of 17 failed (1 iterations)
VERIFICATION SUCCESSFUL
LOG:EXECUTE;ELAPSED=0.03s;USER=0.02s;SYSTEM=0.00s;CPU=96%;MEM=13796kb
LOG:Success!
